interface LolSummonerV1CurrentSummoner {
    accountId: number;
    displayName: string;
    gameName: string;
    internalName: string;
    nameChangeFlag: boolean;
    percentCompleteForNextLevel: number;
    privacy: string;
    profileIconId: number;
    puuid: string;
    rerollPoints: {
        currentPoints: number;
        maxRolls: number;
        numberOfRolls: number;
        pointsCostToRoll: number;
        pointsToReroll: number;
    };
    summonerId: number;
    summonerLevel: number;
    tagLine: string;
    unnamed: boolean;
    xpSinceLastLevel: number;
    xpUntilNextLevel: number;
}

interface LolRankedV1CurrentRankedStats {
    currentSeasonSplitPoints: number;
    earnedRegaliaRewardIds: any[];
    highestCurrentSeasonReachedTierSR: string;
    highestPreviousSeasonEndDivision: string;
    highestPreviousSeasonEndTier: string;
    highestRankedEntry: {
        division: string;
        highestDivision: string;
        highestTier: string;
        isProvisional: boolean;
        leaguePoints: number;
        losses: number;
        miniSeriesProgress: string;
        previousSeasonEndDivision: string;
        previousSeasonEndTier: string;
        previousSeasonHighestDivision: string;
        previousSeasonHighestTier: string;
        provisionalGameThreshold: number;
        provisionalGamesRemaining: number;
        queueType: string;
        ratedRating: number;
        ratedTier: string;
        tier: string;
        warnings: any;
        wins: number;
    };
    highestRankedEntrySR: {
        division: string;
        highestDivision: string;
        highestTier: string;
        isProvisional: boolean;
        leaguePoints: number;
        losses: number;
        miniSeriesProgress: string;
        previousSeasonEndDivision: string;
        previousSeasonEndTier: string;
        previousSeasonHighestDivision: string;
        previousSeasonHighestTier: string;
        provisionalGameThreshold: number;
        provisionalGamesRemaining: number;
        queueType: string;
        ratedRating: number;
        ratedTier: string;
        tier: string;
        warnings: any;
        wins: number;
    };
    previousSeasonSplitPoints: number;
    queueMap: {
        RANKED_FLEX_SR: {
            division: string;
            highestDivision: string;
            highestTier: string;
            isProvisional: boolean;
            leaguePoints: number;
            losses: number;
            miniSeriesProgress: string;
            previousSeasonEndDivision: string;
            previousSeasonEndTier: string;
            previousSeasonHighestDivision: string;
            previousSeasonHighestTier: string;
            provisionalGameThreshold: number;
            provisionalGamesRemaining: number;
            queueType: string;
            ratedRating: number;
            ratedTier: string;
            tier: string;
            warnings: any;
            wins: number;
        };
        RANKED_SOLO_5x5: {
            division: string;
            highestDivision: string;
            highestTier: string;
            isProvisional: boolean;
            leaguePoints: number;
            losses: number;
            miniSeriesProgress: string;
            previousSeasonEndDivision: string;
            previousSeasonEndTier: string;
            previousSeasonHighestDivision: string;
            previousSeasonHighestTier: string;
            provisionalGameThreshold: number;
            provisionalGamesRemaining: number;
            queueType: string;
            ratedRating: number;
            ratedTier: string;
            tier: string;
            warnings: any;
            wins: number;
        };
        RANKED_TFT: {
            division: string;
            highestDivision: string;
            highestTier: string;
            isProvisional: boolean;
            leaguePoints: number;
            losses: number;
            miniSeriesProgress: string;
            previousSeasonEndDivision: string;
            previousSeasonEndTier: string;
            previousSeasonHighestDivision: string;
            previousSeasonHighestTier: string;
            provisionalGameThreshold: number;
            provisionalGamesRemaining: number;
            queueType: string;
            ratedRating: number;
            ratedTier: string;
            tier: string;
            warnings: any;
            wins: number;
        };
        RANKED_TFT_DOUBLE_UP: {
            division: string;
            highestDivision: string;
            highestTier: string;
            isProvisional: boolean;
            leaguePoints: number;
            losses: number;
            miniSeriesProgress: string;
            previousSeasonEndDivision: string;
            previousSeasonEndTier: string;
            previousSeasonHighestDivision: string;
            previousSeasonHighestTier: string;
            provisionalGameThreshold: number;
            provisionalGamesRemaining: number;
            queueType: string;
            ratedRating: number;
            ratedTier: string;
            tier: string;
            warnings: any;
            wins: number;
        };
        RANKED_TFT_TURBO: {
            division: string;
            highestDivision: string;
            highestTier: string;
            isProvisional: boolean;
            leaguePoints: number;
            losses: number;
            miniSeriesProgress: string;
            previousSeasonEndDivision: string;
            previousSeasonEndTier: string;
            previousSeasonHighestDivision: string;
            previousSeasonHighestTier: string;
            provisionalGameThreshold: number;
            provisionalGamesRemaining: number;
            queueType: string;
            ratedRating: number;
            ratedTier: string;
            tier: string;
            warnings: any;
            wins: number;
        };
    };
    queues: {
        division: string;
        highestDivision: string;
        highestTier: string;
        isProvisional: boolean;
        leaguePoints: number;
        losses: number;
        miniSeriesProgress: string;
        previousSeasonEndDivision: string;
        previousSeasonEndTier: string;
        previousSeasonHighestDivision: string;
        previousSeasonHighestTier: string;
        provisionalGameThreshold: number;
        provisionalGamesRemaining: number;
        queueType: string;
        ratedRating: number;
        ratedTier: string;
        tier: string;
        warnings: any;
        wins: number;
    }[];
    rankedRegaliaLevel: number;
}

interface LolChampionsV1OwnedChampionsMinimal {
    id: number;
    name: string;
    alias: string;
    title: string;
    roles: string[];
    freeToPlay: boolean;
    botEnabled: boolean;
    rankedPlayEnabled: boolean;
    active: boolean;
    ownership: {
        owned: boolean;
        rental: {
            rented: boolean;
            winCountRemaining: number;
            purchaseDate: number;
            endDate: number;
        };
        loyaltyReward: boolean;
        xboxGPReward: boolean;
    };
    disabledQueues: string[];
    banVoPath: string;
    chooseVoPath: string;
    stingerSfxPath: string;
    baseSplashPath: string;
    baseLoadScreenPath: string;
    squarePortraitPath: string;
}
